name: Tracker New Releases

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at 00:00 UTC

jobs:
  check-releases:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Check releases in the last 7 days
      env:
        GH_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
      run: |
        END_DATE=$(date +"%Y-%m-%d")
        START_DATE=$(date -d "$END_DATE - 7 days" +"%Y-%m-%d")

        echo "Checking releases from $START_DATE to $END_DATE..."
        # Initialize an empty array to hold all starred repositories
      
        REPOS=()
        
        # Use a loop to paginate through all the results
        page=1
        while : ; do
            # Fetch the list of repositories you've starred for the current page
            starred_repos=$(curl -H "Authorization: token $GH_API_TOKEN" "https://api.github.com/user/starred?per_page=100&page=$page")
        
            # Exit loop if no results are returned
            if [ "$(echo "$starred_repos" | jq -r '. | length')" -eq 0 ]; then
                break
            fi
        
            # Extract full names (e.g., "user/repo") of these repositories and add them to REPOS array
            REPOS+=($(echo "$starred_repos" | jq -r '.[] | .full_name'))
        
            # Move to the next page
            ((page++))
        done
        
        # Now loop through these repositories to check for releases
        for repo in "${REPOS[@]}"; do
            echo "Checking releases for $repo..."
            
            # Fetch releases for the repo
            releases=$(curl -H "Authorization: token $GH_API_TOKEN" "https://api.github.com/repos/$repo/releases")
        
            # Parse releases and check date
            echo "$releases" | jq -c '.[] | select(.published_at > "'$START_DATE'T00:00:00Z" and .published_at < "'$END_DATE'T23:59:59Z") | {name: .name, commit: .target_commitish}'
        done > output.txt

        # # Fetch the list of repositories you've starred
        # starred_repos=$(curl -H "Authorization: token $GH_API_TOKEN" "https://api.github.com/user/starred")
        
        # # Extract full names (e.g., "user/repo") of these repositories
        # REPOS=($(echo "$starred_repos" | jq -r '.[] | .full_name'))
        
        # # Now loop through these repositories to check for releases
        # for repo in "${REPOS[@]}"; do
        #     echo "Checking releases for $repo..."
            
        #     # Fetch releases for the repo
        #     releases=$(curl -H "Authorization: token $GH_API_TOKEN" "https://api.github.com/repos/$repo/releases")
        
        #     # Parse releases and check date
        #     echo "$releases" | jq -c '.[] | select(.published_at > "'$START_DATE'T00:00:00Z" and .published_at < "'$END_DATE'T23:59:59Z") | {name: .name, commit: .target_commitish}'
        # done > output.txt


    - name: Commit the release information
      run: |
        git config user.name "GitHub Action"
        git config user.email "action@github.com"
        git add output.txt
        git commit -m "Updated list of recent releases" || echo "No new releases"
        git push
